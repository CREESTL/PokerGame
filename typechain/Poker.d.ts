/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface PokerInterface extends ethers.utils.Interface {
  functions: {
    "__callback(uint8[],uint256,uint256)": FunctionFragment;
    "getGameInfo(uint256)": FunctionFragment;
    "getHouseEdge()": FunctionFragment;
    "getJackpotFeeMultiplier()": FunctionFragment;
    "getLastGamePlayer()": FunctionFragment;
    "getLastRequestId()": FunctionFragment;
    "getMaxBet()": FunctionFragment;
    "getOracle()": FunctionFragment;
    "getPoolController()": FunctionFragment;
    "isOwner()": FunctionFragment;
    "owner()": FunctionFragment;
    "play(uint256,uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setHouseEdge(uint256)": FunctionFragment;
    "setJackpotFeeMultiplier(uint256)": FunctionFragment;
    "setMaxBet(uint256)": FunctionFragment;
    "setOracle(address)": FunctionFragment;
    "setPoolController(address)": FunctionFragment;
    "supportsIGame()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "__callback",
    values: [BigNumberish[], BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getGameInfo",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getHouseEdge",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getJackpotFeeMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLastGamePlayer",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLastRequestId",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getMaxBet", values?: undefined): string;
  encodeFunctionData(functionFragment: "getOracle", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getPoolController",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "isOwner", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "play",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setHouseEdge",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setJackpotFeeMultiplier",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxBet",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "setOracle", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setPoolController",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsIGame",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "__callback", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getGameInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getHouseEdge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getJackpotFeeMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLastGamePlayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLastRequestId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getMaxBet", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getOracle", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPoolController",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isOwner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "play", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setHouseEdge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setJackpotFeeMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setMaxBet", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setOracle", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setPoolController",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsIGame",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "GameStart(address,uint256,uint256,uint256,uint256)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "PokerResult(uint256,bool,uint8,uint256,uint256,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GameStart"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PokerResult"): EventFragment;
}

export class Poker extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: PokerInterface;

  functions: {
    __callback(
      cards: BigNumberish[],
      requestId: BigNumberish,
      bitCards: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "__callback(uint8[],uint256,uint256)"(
      cards: BigNumberish[],
      requestId: BigNumberish,
      bitCards: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getGameInfo(
      requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: string;
    }>;

    "getGameInfo(uint256)"(
      requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: string;
    }>;

    getHouseEdge(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getHouseEdge()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getJackpotFeeMultiplier(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getJackpotFeeMultiplier()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getLastGamePlayer(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getLastGamePlayer()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getLastRequestId(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getLastRequestId()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getMaxBet(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getMaxBet()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getOracle(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getOracle()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getPoolController(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getPoolController()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    isOwner(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "isOwner()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    owner(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "owner()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    play(
      betColor: BigNumberish,
      chosenColor: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "play(uint256,uint256)"(
      betColor: BigNumberish,
      chosenColor: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    setHouseEdge(
      houseEdge: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setHouseEdge(uint256)"(
      houseEdge: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setJackpotFeeMultiplier(
      jackpotFeeMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setJackpotFeeMultiplier(uint256)"(
      jackpotFeeMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setMaxBet(
      maxBet: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setMaxBet(uint256)"(
      maxBet: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setOracle(
      oracleAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setOracle(address)"(
      oracleAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPoolController(
      poolControllerAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPoolController(address)"(
      poolControllerAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    supportsIGame(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "supportsIGame()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  __callback(
    cards: BigNumberish[],
    requestId: BigNumberish,
    bitCards: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "__callback(uint8[],uint256,uint256)"(
    cards: BigNumberish[],
    requestId: BigNumberish,
    bitCards: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getGameInfo(
    requestId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: string;
  }>;

  "getGameInfo(uint256)"(
    requestId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: string;
  }>;

  getHouseEdge(overrides?: CallOverrides): Promise<BigNumber>;

  "getHouseEdge()"(overrides?: CallOverrides): Promise<BigNumber>;

  getJackpotFeeMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

  "getJackpotFeeMultiplier()"(overrides?: CallOverrides): Promise<BigNumber>;

  getLastGamePlayer(overrides?: CallOverrides): Promise<string>;

  "getLastGamePlayer()"(overrides?: CallOverrides): Promise<string>;

  getLastRequestId(overrides?: CallOverrides): Promise<BigNumber>;

  "getLastRequestId()"(overrides?: CallOverrides): Promise<BigNumber>;

  getMaxBet(overrides?: CallOverrides): Promise<BigNumber>;

  "getMaxBet()"(overrides?: CallOverrides): Promise<BigNumber>;

  getOracle(overrides?: CallOverrides): Promise<string>;

  "getOracle()"(overrides?: CallOverrides): Promise<string>;

  getPoolController(overrides?: CallOverrides): Promise<string>;

  "getPoolController()"(overrides?: CallOverrides): Promise<string>;

  isOwner(overrides?: CallOverrides): Promise<boolean>;

  "isOwner()"(overrides?: CallOverrides): Promise<boolean>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  play(
    betColor: BigNumberish,
    chosenColor: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "play(uint256,uint256)"(
    betColor: BigNumberish,
    chosenColor: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  setHouseEdge(
    houseEdge: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setHouseEdge(uint256)"(
    houseEdge: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setJackpotFeeMultiplier(
    jackpotFeeMultiplier: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setJackpotFeeMultiplier(uint256)"(
    jackpotFeeMultiplier: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setMaxBet(
    maxBet: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setMaxBet(uint256)"(
    maxBet: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setOracle(
    oracleAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setOracle(address)"(
    oracleAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPoolController(
    poolControllerAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPoolController(address)"(
    poolControllerAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  supportsIGame(overrides?: CallOverrides): Promise<boolean>;

  "supportsIGame()"(overrides?: CallOverrides): Promise<boolean>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    __callback(
      cards: BigNumberish[],
      requestId: BigNumberish,
      bitCards: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "__callback(uint8[],uint256,uint256)"(
      cards: BigNumberish[],
      requestId: BigNumberish,
      bitCards: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getGameInfo(
      requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: string;
    }>;

    "getGameInfo(uint256)"(
      requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: string;
    }>;

    getHouseEdge(overrides?: CallOverrides): Promise<BigNumber>;

    "getHouseEdge()"(overrides?: CallOverrides): Promise<BigNumber>;

    getJackpotFeeMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

    "getJackpotFeeMultiplier()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLastGamePlayer(overrides?: CallOverrides): Promise<string>;

    "getLastGamePlayer()"(overrides?: CallOverrides): Promise<string>;

    getLastRequestId(overrides?: CallOverrides): Promise<BigNumber>;

    "getLastRequestId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getMaxBet(overrides?: CallOverrides): Promise<BigNumber>;

    "getMaxBet()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOracle(overrides?: CallOverrides): Promise<string>;

    "getOracle()"(overrides?: CallOverrides): Promise<string>;

    getPoolController(overrides?: CallOverrides): Promise<string>;

    "getPoolController()"(overrides?: CallOverrides): Promise<string>;

    isOwner(overrides?: CallOverrides): Promise<boolean>;

    "isOwner()"(overrides?: CallOverrides): Promise<boolean>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    play(
      betColor: BigNumberish,
      chosenColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "play(uint256,uint256)"(
      betColor: BigNumberish,
      chosenColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    setHouseEdge(
      houseEdge: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setHouseEdge(uint256)"(
      houseEdge: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setJackpotFeeMultiplier(
      jackpotFeeMultiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setJackpotFeeMultiplier(uint256)"(
      jackpotFeeMultiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxBet(maxBet: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "setMaxBet(uint256)"(
      maxBet: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setOracle(oracleAddress: string, overrides?: CallOverrides): Promise<void>;

    "setOracle(address)"(
      oracleAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPoolController(
      poolControllerAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPoolController(address)"(
      poolControllerAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsIGame(overrides?: CallOverrides): Promise<boolean>;

    "supportsIGame()"(overrides?: CallOverrides): Promise<boolean>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    GameStart(
      player: null,
      requestId: null,
      betPoker: null,
      betColor: null,
      chosenColor: null
    ): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    PokerResult(
      winAmount: null,
      winColor: null,
      winPoker: null,
      requestId: null,
      cards: null,
      player: null
    ): EventFilter;
  };

  estimateGas: {
    __callback(
      cards: BigNumberish[],
      requestId: BigNumberish,
      bitCards: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "__callback(uint8[],uint256,uint256)"(
      cards: BigNumberish[],
      requestId: BigNumberish,
      bitCards: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getGameInfo(
      requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getGameInfo(uint256)"(
      requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getHouseEdge(overrides?: CallOverrides): Promise<BigNumber>;

    "getHouseEdge()"(overrides?: CallOverrides): Promise<BigNumber>;

    getJackpotFeeMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

    "getJackpotFeeMultiplier()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLastGamePlayer(overrides?: CallOverrides): Promise<BigNumber>;

    "getLastGamePlayer()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLastRequestId(overrides?: CallOverrides): Promise<BigNumber>;

    "getLastRequestId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getMaxBet(overrides?: CallOverrides): Promise<BigNumber>;

    "getMaxBet()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOracle(overrides?: CallOverrides): Promise<BigNumber>;

    "getOracle()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPoolController(overrides?: CallOverrides): Promise<BigNumber>;

    "getPoolController()"(overrides?: CallOverrides): Promise<BigNumber>;

    isOwner(overrides?: CallOverrides): Promise<BigNumber>;

    "isOwner()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    play(
      betColor: BigNumberish,
      chosenColor: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "play(uint256,uint256)"(
      betColor: BigNumberish,
      chosenColor: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    setHouseEdge(
      houseEdge: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setHouseEdge(uint256)"(
      houseEdge: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setJackpotFeeMultiplier(
      jackpotFeeMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setJackpotFeeMultiplier(uint256)"(
      jackpotFeeMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setMaxBet(maxBet: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "setMaxBet(uint256)"(
      maxBet: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setOracle(oracleAddress: string, overrides?: Overrides): Promise<BigNumber>;

    "setOracle(address)"(
      oracleAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPoolController(
      poolControllerAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPoolController(address)"(
      poolControllerAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    supportsIGame(overrides?: CallOverrides): Promise<BigNumber>;

    "supportsIGame()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    __callback(
      cards: BigNumberish[],
      requestId: BigNumberish,
      bitCards: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "__callback(uint8[],uint256,uint256)"(
      cards: BigNumberish[],
      requestId: BigNumberish,
      bitCards: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getGameInfo(
      requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGameInfo(uint256)"(
      requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getHouseEdge(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getHouseEdge()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getJackpotFeeMultiplier(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getJackpotFeeMultiplier()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLastGamePlayer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getLastGamePlayer()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLastRequestId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getLastRequestId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxBet(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getMaxBet()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getOracle(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getOracle()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPoolController(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getPoolController()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isOwner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    play(
      betColor: BigNumberish,
      chosenColor: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "play(uint256,uint256)"(
      betColor: BigNumberish,
      chosenColor: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    setHouseEdge(
      houseEdge: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setHouseEdge(uint256)"(
      houseEdge: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setJackpotFeeMultiplier(
      jackpotFeeMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setJackpotFeeMultiplier(uint256)"(
      jackpotFeeMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setMaxBet(
      maxBet: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setMaxBet(uint256)"(
      maxBet: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setOracle(
      oracleAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setOracle(address)"(
      oracleAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPoolController(
      poolControllerAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPoolController(address)"(
      poolControllerAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    supportsIGame(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "supportsIGame()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
