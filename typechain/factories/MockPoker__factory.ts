/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockPoker } from "../MockPoker";

export class MockPoker__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    oracleAddress: string,
    poolControllerAddress: string,
    overrides?: Overrides
  ): Promise<MockPoker> {
    return super.deploy(
      oracleAddress,
      poolControllerAddress,
      overrides || {}
    ) as Promise<MockPoker>;
  }
  getDeployTransaction(
    oracleAddress: string,
    poolControllerAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      oracleAddress,
      poolControllerAddress,
      overrides || {}
    );
  }
  attach(address: string): MockPoker {
    return super.attach(address) as MockPoker;
  }
  connect(signer: Signer): MockPoker__factory {
    return super.connect(signer) as MockPoker__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPoker {
    return new Contract(address, _abi, signerOrProvider) as MockPoker;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolControllerAddress",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "GameStart",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "winColor",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "enum MockPoker.GameResults",
        name: "winPoker",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cards",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PokerResult",
    type: "event",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint8[]",
        name: "cards",
        type: "uint8[]",
      },
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bitCards",
        type: "uint256",
      },
    ],
    name: "__callback",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "_betColor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "_betColorSquare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "_betColorVariance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "_betFlip",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "_betFlipSquare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "_betFlipVariance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "_gamesCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "_maxBet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "_poolController",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint8[]",
        name: "_cardsArray",
        type: "uint8[]",
      },
    ],
    name: "checkCombinationResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int8[7]",
        name: "",
        type: "int8[7]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int8[7]",
        name: "",
        type: "int8[7]",
      },
      {
        internalType: "enum MockPoker.GameResults",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint8",
        name: "playerHand",
        type: "uint8",
      },
      {
        internalType: "int8[7]",
        name: "playerKickers",
        type: "int8[7]",
      },
      {
        internalType: "uint8",
        name: "computerHand",
        type: "uint8",
      },
      {
        internalType: "int8[7]",
        name: "computerKickers",
        type: "int8[7]",
      },
    ],
    name: "determineWinnerPoker",
    outputs: [
      {
        internalType: "enum MockPoker.GameResults",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint8[7]",
        name: "cardsArray",
        type: "uint8[7]",
      },
      {
        internalType: "uint8[7]",
        name: "ranksArray",
        type: "uint8[7]",
      },
    ],
    name: "evaluateHand",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "int8[7]",
        name: "",
        type: "int8[7]",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint8[]",
        name: "colorCards",
        type: "uint8[]",
      },
      {
        internalType: "uint256",
        name: "chosenColor",
        type: "uint256",
      },
    ],
    name: "getColorResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getGameInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getLastGamePlayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getLastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getMaxBet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getMyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getPoolController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "pokerB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "colorB",
        type: "uint256",
      },
    ],
    name: "maxBetCalc",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "betColor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chosenColor",
        type: "uint256",
      },
    ],
    name: "play",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint8[]",
        name: "_cardsArray",
        type: "uint8[]",
      },
    ],
    name: "setCards",
    outputs: [
      {
        internalType: "enum MockPoker.GameResults",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "maxBet",
        type: "uint256",
      },
    ],
    name: "setMaxBet",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "poolControllerAddress",
        type: "address",
      },
    ],
    name: "setPoolController",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint8[7]",
        name: "dataRanks",
        type: "uint8[7]",
      },
      {
        internalType: "uint8[7]",
        name: "dataCards",
        type: "uint8[7]",
      },
      {
        internalType: "uint256",
        name: "low",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "high",
        type: "uint256",
      },
    ],
    name: "sort",
    outputs: [],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "sqrt",
    outputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "supportsIGame",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002f5738038062002f57833981810160405260408110156200003757600080fd5b508051602090910151816000620000566001600160e01b03620000d116565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620000b4816001600160e01b03620000d516565b50620000c9816001600160e01b03620001d116565b5050620002cd565b3390565b6000819050806001600160a01b031663d520544c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200011457600080fd5b505afa15801562000129573d6000803e3d6000fd5b505050506040513d60208110156200014057600080fd5b5051620001ae57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f696e76616c696420494f7261636c652061646472657373000000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b039290921691909117905550565b6000819050806001600160a01b031663c43a9a146040518163ffffffff1660e01b815260040160206040518083038186803b1580156200021057600080fd5b505afa15801562000225573d6000803e3d6000fd5b505050506040513d60208110156200023c57600080fd5b5051620002aa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f706f6f6c41646472657373206d7573742062652049506f6f6c00000000000000604482015290519081900360640190fd5b600c80546001600160a01b0319166001600160a01b039290921691909117905550565b612c7a80620002dd6000396000f3fe6080604052600436106102195760003560e01c8063715018a61161011d5780639a166299116100b0578063ae20d21a1161007f578063dac0ff2611610064578063dac0ff26146108d1578063e623a98414610a08578063f2fde38b14610a9957610219565b8063ae20d21a146107ee578063c85f12b51461089e57610219565b80639a166299146106e15780639e091520146106f6578063a16976b71461070b578063a4ca9b95146107d957610219565b8063833b1fce116100ec578063833b1fce14610678578063881eff1e1461068d5780638da5cb5b146106b75780638f32d59b146106cc57610219565b8063715018a6146105f85780637654007e1461060d5780637adbf973146106225780637bc49a951461065557610219565b806347e1d550116101b0578063646668b61161017f57806368dcce9c1161016457806368dcce9c1461059d5780636d30cc9d146105b257806370c7a86b146105e357610219565b8063646668b61461055e578063677342ce1461057357610219565b806347e1d5501461043b5780634a1f2ccb146104945780634a980ef314610519578063553b82da1461052e57610219565b80632e47bca2116101ec5780632e47bca21461033557806335e10408146103fc5780633c73ab8a14610411578063440facc41461042657610219565b806317a2bcba1461021e57806319c2b4c3146102e457806319f2afb81461030b5780632490f72f14610320575b600080fd5b34801561022a57600080fd5b506102d06004803603604081101561024157600080fd5b81019060208101813564010000000081111561025c57600080fd5b82018360208201111561026e57600080fd5b8035906020019184602083028401116401000000008311171561029057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250610acc915050565b604080519115158252519081900360200190f35b3480156102f057600080fd5b506102f9610b41565b60408051918252519081900360200190f35b34801561031757600080fd5b506102f9610ba4565b34801561032c57600080fd5b506102f9610baa565b34801561034157600080fd5b506103d8600480360361020081101561035957600080fd5b6040805160e081810190925260ff8435169392830192916101008301919060208401906007908390839080828437600092019190915250506040805160e0818101909252929560ff853516959094909361010082019350916020909101906007908390839080828437600092019190915250919450610bb09350505050565b604051808260038111156103e857fe5b60ff16815260200191505060405180910390f35b34801561040857600080fd5b506102f9610c84565b34801561041d57600080fd5b506102f9610c8a565b34801561043257600080fd5b506102f9610c90565b34801561044757600080fd5b506104656004803603602081101561045e57600080fd5b5035610c96565b604080519485526020850193909352838301919091526001600160a01b03166060830152519081900360800190f35b3480156104a057600080fd5b50610517600480360360608110156104b757600080fd5b8101906020810181356401000000008111156104d257600080fd5b8201836020820111156104e457600080fd5b8035906020019184602083028401116401000000008311171561050657600080fd5b919350915080359060200135610cc7565b005b34801561052557600080fd5b506102f9610e37565b34801561053a57600080fd5b506105176004803603604081101561055157600080fd5b5080359060200135610e3d565b34801561056a57600080fd5b506102f9611184565b34801561057f57600080fd5b506102f96004803603602081101561059657600080fd5b503561118a565b3480156105a957600080fd5b506102f96111c1565b3480156105be57600080fd5b506105c76111c7565b604080516001600160a01b039092168252519081900360200190f35b3480156105ef57600080fd5b506102f96111d6565b34801561060457600080fd5b506105176111dc565b34801561061957600080fd5b506102d061127f565b34801561062e57600080fd5b506105176004803603602081101561064557600080fd5b50356001600160a01b0316611284565b6105176004803603604081101561066b57600080fd5b50803590602001356112e9565b34801561068457600080fd5b506105c761144b565b34801561069957600080fd5b50610517600480360360208110156106b057600080fd5b503561145a565b3480156106c357600080fd5b506105c76114b8565b3480156106d857600080fd5b506102d06114c7565b3480156106ed57600080fd5b506105c76114eb565b34801561070257600080fd5b506105c76114ef565b34801561071757600080fd5b5061079760048036036101c081101561072f57600080fd5b810190808060e001906007806020026040519081016040528092919082600760200280828437600092019190915250506040805160e0818101909252929594938181019392509060079083908390808284376000920191909152509194506114fe9350505050565b60405160ff83168152602081018260e080838360005b838110156107c55781810151838201526020016107ad565b505050509050019250505060405180910390f35b3480156107e557600080fd5b506105c7611e93565b3480156107fa57600080fd5b506103d86004803603602081101561081157600080fd5b81019060208101813564010000000081111561082c57600080fd5b82018360208201111561083e57600080fd5b8035906020019184602083028401116401000000008311171561086057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611eb4945050505050565b3480156108aa57600080fd5b50610517600480360360208110156108c157600080fd5b50356001600160a01b0316612060565b3480156108dd57600080fd5b50610981600480360360208110156108f457600080fd5b81019060208101813564010000000081111561090f57600080fd5b82018360208201111561092157600080fd5b8035906020019184602083028401116401000000008311171561094357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506120c2945050505050565b604051858152602081018560e080838360005b838110156109ac578181015183820152602001610994565b5050505090500184815260200183600760200280838360005b838110156109dd5781810151838201526020016109c5565b505050509050018260038111156109f057fe5b60ff1681526020019550505050505060405180910390f35b348015610a1457600080fd5b506105176004803603610200811015610a2c57600080fd5b810190808060e001906007806020026040519081016040528092919082600760200280828437600092019190915250506040805160e081810190925292959493818101939250906007908390839080828437600092019190915250919450508135925050602001356122a1565b348015610aa557600080fd5b5061051760048036036020811015610abc57600080fd5b50356001600160a01b0316612407565b600080805b8451811015610b3457836002600d878481518110610aeb57fe5b602002602001015160ff1681610afd57fe5b0460ff1681610b0857fe5b0660ff161415610b19576001909101905b60028210610b2c57600192505050610b3b565b600101610ad1565b5060009150505b92915050565b6000610b4b6114c7565b610b9c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b506002545b90565b600b5481565b60085481565b60008260ff168560ff161115610bdc578460ff1660091415610bd457506003610c7c565b506002610c7c565b8260ff168560ff161415610c785760005b6005811015610c6e57828160078110610c0257fe5b602002015160000b858260078110610c1657fe5b602002015160000b1315610c2e576002915050610c7c565b828160078110610c3a57fe5b602002015160000b858260078110610c4e57fe5b602002015160000b1215610c66576000915050610c7c565b600101610bed565b5060019050610c7c565b5060005b949350505050565b60075481565b60095481565b600a5481565b6000908152600d6020526040902080546001820154600283015460039093015491939092916001600160a01b031690565b6001546001600160a01b03163314610d26576040805162461bcd60e51b815260206004820152601860248201527f63616c6c6572206973206e6f7420746865206f7261636c650000000000000000604482015290519081900360640190fd5b60008281526003602052604090206001808201805467ffffffffffffffff19164267ffffffffffffffff16179055600182015468010000000000000000900460ff166002811115610d7357fe5b14610dc5576040805162461bcd60e51b815260206004820152601660248201527f7265717565737420616c726561647920636c6f73656400000000000000000000604482015290519081900360640190fd5b60018101805468ff0000000000000000191668020000000000000000179055610def818686612a84565b50610e3085858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525087925086915061117f9050565b5050505050565b60055481565b600c546040805163255a5d2160e11b815290516000926001600160a01b031691634ab4ba42916004808301926020929190829003018186803b158015610e8257600080fd5b505afa158015610e96573d6000803e3d6000fd5b505050506040513d6020811015610eac57600080fd5b5051600454909150610ec590600163ffffffff61246916565b600481905560011415610f1f57600b54610eee57610eea8160e663ffffffff6124ca16565b600b555b60058390556006829055610f08838063ffffffff61250c16565b600755610f1b828063ffffffff61250c16565b6008555b6001600454111561117f57610f66600454610f5a85610f4e60055460016004540361250c90919063ffffffff16565b9063ffffffff61246916565b9063ffffffff6124ca16565b600555600454600654610f8f9190610f5a908590610f4e9060001985019063ffffffff61250c16565b600655600454610fc690610f5a610fac868063ffffffff61250c16565b610f4e60075460016004540361250c90919063ffffffff16565b600755600454610ffd90610f5a610fe3858063ffffffff61250c16565b610f4e60085460016004540361250c90919063ffffffff16565b600855600554611013908063ffffffff61250c16565b6007540360095560065461102d908063ffffffff61250c16565b60085403600a819055506000611067611058600a61104c60095461118a565b9063ffffffff61250c16565b6005549063ffffffff61246916565b9050600061108d61107e600a61104c600a5461118a565b6006549063ffffffff61246916565b905060026004541180156110b057506110ad8360e663ffffffff6124ca16565b82105b80156110cb57506110c88360e663ffffffff6124ca16565b81105b15610e3057808211156110f957600b546110f1908390610f5a908063ffffffff61250c16565b600b55611116565b600b54611112908290610f5a908063ffffffff61250c16565b600b555b600060045561112c83606d63ffffffff6124ca16565b600b54111561114e5761114683606d63ffffffff6124ca16565b600b55610e30565b61115f8360e663ffffffff6124ca16565b600b541015610e30576111798360e663ffffffff6124ca16565b600b5550505b505050565b600b5490565b80600260018201045b818110156111bb578091506002818285816111aa57fe5b0401816111b357fe5b049050611193565b50919050565b60045481565b600c546001600160a01b031690565b60065481565b6111e46114c7565b611235576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600190565b61128c6114c7565b6112dd576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6112e681612565565b50565b604080513380825291517fb3e736faa4964dca0165113d691c436b6fb927baffb3e664f43e18663bdaad129181900360200190a1600c5460408051634707fff760e01b815234600482015290516001600160a01b0390921691634707fff79160248082019260009290919082900301818387803b15801561136957600080fd5b505af115801561137d573d6000803e3d6000fd5b506001925061138a915050565b6002805460009081526003602052604090206001015468010000000000000000900460ff16908111156113b957fe5b146113c6576113c6612643565b6040805160808101909152838152602081016113e8348663ffffffff6127c816565b81526020808201949094526001600160a01b03928316604091820152600280546000908152600d865282902083518155948301516001860155908201519084015560600151600390920180546001600160a01b0319169290911691909117905550565b6001546001600160a01b031690565b6114626114c7565b6114b3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600b55565b6000546001600160a01b031690565b600080546001600160a01b03166114dc6114eb565b6001600160a01b031614905090565b3390565b600c546001600160a01b031681565b6000611508612b2d565b6000611512612b2d565b506040805160e08101825260001980825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152611555612b4b565b50604080516080810182526000808252602082018190529181018290526060810191909152611582612b69565b50604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052906115f4612b88565b5060408051808201909152600019808252602082015260016000611616612b2d565b506040805160e08101825260001980825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152600094505b60078510156118d757858c866007811061166c57fe5b602002015160ff16600d811061167e57fe5b60200201805160010160ff1690526006851015611736578b85600101600781106116a457fe5b602002015160010160ff168c86600781106116bb57fe5b602002015160ff1614156116fd5760019092019160058314156116fd57600498508b85600101600781106116eb57fe5b6020020151600401600090810b900b88525b8b856001016007811061170c57fe5b602002015160010160ff168c866007811061172357fe5b602002015160ff16111561173657600192505b858c866007811061174357fe5b602002015160ff16600d811061175557fe5b602002015160ff16600414801561176f575060078960ff16105b1561179757600798508b856007811061178457fe5b6020020151600090810b900b88526118d7565b858c86600781106117a457fe5b602002015160ff16600d81106117b657fe5b602002015160ff1660031480156117d0575060038960ff16105b1561180457600398508b85600781106117e557fe5b60200201518860005b602002019060000b908160000b81525050611890565b858c866007811061181157fe5b602002015160ff16600d811061182357fe5b602002015160ff166002141561189057835160000b600019141561185a578b856007811061184d57fe5b60200201518460006117ee565b836001602002015160000b6000191415611890578b856007811061187a57fe5b60209081029190910151600090810b900b908501525b86600d8e876007811061189f57fe5b602002015160ff16816118ae57fe5b0460ff16600481106118bc57fe5b60200201805160ff6001918201169091529490940193611656565b8860ff166007141561195057600094505b600785101561195057875160000b8c866007811061190257fe5b602002015160000b14611945578b856007811061191b57fe5b6020020151886001600092830b90920b6020909202015250969850949650611e8c95505050505050565b6001909401936118e8565b60058960ff161015611b7f57600094505b6004851015611b7f57600587866004811061197857fe5b602002015160ff1610611b74576000949150845b6007861015611a335782600d8f88600781106119a457fe5b602002015160ff16816119b357fe5b0460ff161415611a28578c86600781106119c957fe5b6020020151828260ff16600781106119dd57fe5b602002019060000b908160000b815250508c86600781106119fa57fe5b6020020151898260ff1660078110611a0e57fe5b600092830b90920b60209092020152603260c08a01526001015b60019095019461198c565b8960ff1660041415611b4f57600095505b6003861015611b4f57818660040160078110611a5c57fe5b6020020151828760078110611a6d57fe5b60200201510360000b6004148015611a9d5750818660040160078110611a8f57fe5b602002015160000b60001914155b15611b4457600899506040518060e00160405280838860078110611abd57fe5b602002015160000b60000b815260200160001960000b815260200160001960000b815260200160001960000b815260200160001960000b815260200160001960000b815260200160001960000b8152509850818660078110611b1b57fe5b602002015160000b600c1415611b3057600999505b50979950959750611e8c9650505050505050565b600190950194611a44565b505060001960a0880181905260c08801525060059850949650611e8c95505050505050565b600190940193611961565b8860ff1660031415611c9a57600019846001602002015160000b1315611c1c57602084015160069950869060000b600d8110611bb757fe5b602002015160ff1686856000602002015160000b600d8110611bd557fe5b602002015160ff1610611c015760208401518860015b602002019060000b908160000b81525050611c09565b83600061191b565b50969850949650611e8c95505050505050565b600094505b6005851015611c0957875160000b8c8660078110611c3b57fe5b602002015160000b14611c8f578b8560078110611c5457fe5b6020020151888660010160078110611c6857fe5b600092830b90920b60209092020152876002602002015160000b60001914611c8f57611c09565b600190940193611c21565b60038960ff161015611e7e57836001602002015160000b60001914611d82576020840151845160029a50600091820b910b1315611cf0578351600090810b810b8952602080860151820b90910b90890152611d0a565b602080850151600090810b810b8a528551810b900b908901525b600094505b6007851015611c0957835160000b8c8660078110611d2957fe5b602002015160000b14158015611d595750602084015160000b8c8660078110611d4e57fe5b602002015160000b14155b15611d77578b8560078110611d6a57fe5b6020020151886002611beb565b600190940193611d0f565b835160000b60001914611e34578351600090810b810b8952600199509450885b6007861015611e2e57845160000b8d8760078110611dbc57fe5b602002015160000b14611dfc578c8660078110611dd557fe5b6020020151898260ff1660078110611de957fe5b600092830b90920b602090920201526001015b886003602002015160000b60001914611e235750979950959750611e8c9650505050505050565b600190950194611da2565b50611e7e565b60009850600094505b6005851015611c09578b8560078110611e5257fe5b6020020151888660078110611e6357fe5b600092830b90920b6020929092020152600190940193611e3d565b509698509496505050505050505b9250929050565b6002546000908152600d60205260409020600301546001600160a01b031690565b6000611ebe612ba6565b611ec6612ba6565b60005b8451811015611fda576007811015611f4f57848181518110611ee757fe5b602002602001015183602001518260078110611eff57fe5b602002019060ff16908160ff1681525050600d858281518110611f1e57fe5b602002602001015160ff1681611f3057fe5b0683600001518260078110611f4157fe5b60ff90921660209290920201525b6001811115611fd257848181518110611f6457fe5b602002602001015182602001516002830360078110611f7f57fe5b602002019060ff16908160ff1681525050600d858281518110611f9e57fe5b602002602001015160ff1681611fb057fe5b0682600001516002830360078110611fc457fe5b60ff90921660209290920201525b600101611ec9565b50611ff182600001518360200151600060066122a1565b61200781600001518260200151600060066122a1565b612019826020015183600001516114fe565b604084015260ff1660608301526020810151815161203791906114fe565b604080840182905260ff909216606080850182905285015192850151610c7c9392909190610bb0565b6120686114c7565b6120b9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6112e68161280a565b60006120cc612b2d565b60006120d6612b2d565b60006120e0612ba6565b6120e8612ba6565b60005b88518110156121fc5760078110156121715788818151811061210957fe5b60200260200101518360200151826007811061212157fe5b602002019060ff16908160ff1681525050600d89828151811061214057fe5b602002602001015160ff168161215257fe5b068360000151826007811061216357fe5b60ff90921660209290920201525b60018111156121f45788818151811061218657fe5b6020026020010151826020015160028303600781106121a157fe5b602002019060ff16908160ff1681525050600d8982815181106121c057fe5b602002602001015160ff16816121d257fe5b06826000015160028303600781106121e657fe5b60ff90921660209290920201525b6001016120eb565b5061221382600001518360200151600060066122a1565b61222981600001518260200151600060066122a1565b61223b826020015183600001516114fe565b604084015260ff1660608301526020810151815161225991906114fe565b604083015260ff166060820152600061227189611eb4565b60608481015160409586015191850151949095015160ff9586169c919b5094909316985092965091945092505050565b8082101561240157600084600284840104600781106122bc57fe5b602002015160ff16905082825b828783600781106122d657fe5b602002015160ff1611156122ef576001909101906122c9565b828782600781106122fc57fe5b602002015160ff16101561231357600019016122ef565b80821061231f576123d2565b86816007811061232b57fe5b602002015187836007811061233c57fe5b602002015188846007811061234d57fe5b6020020189846007811061235d57fe5b60ff93841660209190910291909101529116905285816007811061237d57fe5b602002015186836007811061238e57fe5b602002015187846007811061239f57fe5b602002018884600781106123af57fe5b60ff938416602091909102919091015291169052600190910190600019016122c9565b808510156123e6576123e6878787846122a1565b600101838110156123fd576123fd878783876122a1565b5050505b50505050565b61240f6114c7565b612460576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6112e6816128e8565b6000828201838110156124c3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006124c383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612988565b60008261251b57506000610b3b565b8282028284828161252857fe5b04146124c35760405162461bcd60e51b8152600401808060200182810382526021815260200180612c256021913960400191505060405180910390fd5b6000819050806001600160a01b031663d520544c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156125a357600080fd5b505afa1580156125b7573d6000803e3d6000fd5b505050506040513d60208110156125cd57600080fd5b5051612620576040805162461bcd60e51b815260206004820152601760248201527f696e76616c696420494f7261636c652061646472657373000000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b039290921691909117905550565b60015460408051633acfa2ed60e21b815290516000926001600160a01b03169163eb3e8bb491600480830192602092919082900301818787803b15801561268957600080fd5b505af115801561269d573d6000803e3d6000fd5b505050506040513d60208110156126b357600080fd5b50516000818152600360205260409020600101549091504267ffffffffffffffff90811662093a7f190191161115612732576040805162461bcd60e51b815260206004820152601660248201527f72657175657374496420616c7265616479207573656400000000000000000000604482015290519081900360640190fd5b6001546040805163090b063f60e41b81526004810184905290516001600160a01b03909216916390b063f09160248082019260009290919082900301818387803b15801561277f57600080fd5b505af1158015612793573d6000803e3d6000fd5b5050506000828152600360205260409020600101805468ff000000000000000019166801000000000000000017905550600255565b60006124c383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612a2a565b6000819050806001600160a01b031663c43a9a146040518163ffffffff1660e01b815260040160206040518083038186803b15801561284857600080fd5b505afa15801561285c573d6000803e3d6000fd5b505050506040513d602081101561287257600080fd5b50516128c5576040805162461bcd60e51b815260206004820152601960248201527f706f6f6c41646472657373206d7573742062652049506f6f6c00000000000000604482015290519081900360640190fd5b600c80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b03811661292d5760405162461bcd60e51b8152600401808060200182810382526026815260200180612bff6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008183612a145760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129d95781810151838201526020016129c1565b50505050905090810190601f168015612a065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612a2057fe5b0495945050505050565b60008184841115612a7c5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156129d95781810151838201526020016129c1565b505050900390565b82805482825590600052602060002090601f01602090048101928215612b1d5791602002820160005b83821115612aee57833560ff1683826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302612aad565b8015612b1b5782816101000a81549060ff0219169055600101602081600001049283019260010302612aee565b505b50612b29929150612be0565b5090565b6040518060e001604052806007906020820280388339509192915050565b60405180608001604052806004906020820280388339509192915050565b604051806101a00160405280600d906020820280388339509192915050565b60405180604001604052806002906020820280388339509192915050565b6040518060800160405280612bb9612b2d565b8152602001612bc6612b2d565b8152602001612bd3612b2d565b8152600060209091015290565b610ba191905b80821115612b2957805460ff19168155600101612be656fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a7231582003700d7e87b5b18265c5827f3b35f03e59ac87e48718bf74f1bf38c31e66315d64736f6c634300050c0032";
